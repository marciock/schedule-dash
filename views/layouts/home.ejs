<%- contentFor('body') %>



<div class="row">
        <div class="col s4 center-align"><span class="flow-text">Título</span></div>
        <div class="col s2 center-align"><span class="flow-text">Criação</span></div>
        <div class="col s2 center-align"><span class="flow-text">Prazo</span></div>
        <div class="col s2 center-align "><span class="flow-text">Prioridade</span></div>
        <div class="col s2"><%- include ../widgets/dropdown %></div>
   
 </div>
 <div class="row">
     <ul class="collapsible popout" id="titles"> </ul>        
    
</div>
    <div class="col s6 m3">
        <div class="fixed-action-btn">
          <button type="button" data-target="modalnews" class="btn-floating btn-large red modal-trigger" id="btn-news">
           <i class="material-icons">add</i>
          </button> 
        </div>


    </div>

<%- include ../modals/modal-news %>
<%- include ../modals/modal-search-title %>
<%- include ../modals/modal-search-actual %>
<%- include ../modals/modal-search-end %>

<script src="javascripts/fetchcustom.js"></script>
<script src="socket.io/socket.io.js"></script>
<script>
 
    const ul=document.getElementById('titles');
    const newOk=document.getElementById('new-ok');
    const title=document.getElementById('title');
    const dateEnd=document.getElementById('dateend');
    const description=document.getElementById('description');

    //search Modal input elements

    const searchTitleInput=document.getElementById('search-title-input');
    const searchActualBeginInput=document.getElementById('search-actual-begin-input');
    const searchActualEndInput=document.getElementById('search-actual-end-input');
    const searchEndBeginInput=document.getElementById('search-end-begin-input');
    const searchEndEndInput=document.getElementById('search-end-begin-input');

    // Search modal button elements

    const btnSearchTitle=document.getElementById('btn-search-title');
   
    let priority='Alta';
    const date=new Date();
    const time=date.getDate();
    
    const now=`${date.getDay()}-${date.getMonth()}-${date.getFullYear()}`

   
    let checkable;

    let deActive;

    fecthFindSchedule('/find','titles');

    window.onload=()=>{
       

        //modal
        const options={opacity:0.5}
        const elems = document.querySelectorAll('.modal');
        const instances = M.Modal.init(elems, options);
        const instance=M.Modal.getInstance(elems);


        //collapsible
        const collapsibleElement=document.querySelectorAll('.collapsible');
        const collapsibleInstances=M.Collapsible.init(collapsibleElement,{accordion:true});

        //dropdown
        const dropElement=document.querySelectorAll('.dropdown-trigger');
        const dropInstances=M.Dropdown.init(dropElement,{});

        //Tooltipped
            const toolTipped = document.querySelectorAll('.tooltipped');
            const instancesToolTipped = M.Tooltip.init(toolTipped, {});

        // começa o sochet.io       
        const socket=io('http://localhost:3000');


        // buttom search title
        btnSearchTitle.addEventListener('click',()=>{

            let title=searchTitleInput.value;
            data={
                field:'title',
                params:title
            }
            
            fecthSearchSchedule('/search',data,'titles');
        })

        newOk.addEventListener('click',()=>{

                let data={
                   title:title.value,
                   dateactual:now,
                   dateend:dateend.value,
                   priority:'Alta',
                   description:description.value,
                   active:'true'
                }

                fetchSaveSchedule('/save',data);
            
            socket.emit('schedules');
        })

        // this function  deactive record of the schedule
         deActive=(id)=>{

            let data={
                id:id,
                active:'false'
            }

            fetchSaveSchedule('/update',data);
            
            socket.emit('schedules');
        }

        // save editions of the descriptions

        checkable=(element,id)=>{
        const text=document.getElementById(element).innerHTML;

        let data={
            id:id,
            description:text
        }
        
        fetchSaveSchedule('/update',data);

       M.toast({html: 'Salvo com sucesso!'});
            
       //     socket.emit('schedules');
       
    }

    // Emit reload of data aafter crud
        socket.on('output',data=>{

           // console.log(data);
            let conka='';
            
        
            data.map(dash => {

                
          
            conka +=collapsibleLI(dash._id,dash.title,dash.dateactual,dash.dateend,dash.description);

            }).join('')
            
            ul.innerHTML=conka;

        })

        

    };

   


</script>